// <auto-generated />
using System;
using DI1P2_2027_BibliothequeAPI.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DI1P2_2027_BibliothequeAPI.Migrations
{
    [DbContext(typeof(BibliothequeDbContext))]
    [Migration("20241106131816_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DI1P2_2027_BibliothequeAPI.Models.Author", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.ToTable("author", (string)null);
                });

            modelBuilder.Entity("DI1P2_2027_BibliothequeAPI.Models.Book", b =>
                {
                    b.Property<long>("isbn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("isbn"));

                    b.Property<long>("authorId")
                        .HasColumnType("bigint");

                    b.Property<string>("publishdate")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("isbn");

                    b.HasIndex("authorId");

                    b.ToTable("book", (string)null);
                });

            modelBuilder.Entity("DI1P2_2027_BibliothequeAPI.Models.Borrow", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("bookIsbn")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<long>("userId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("bookIsbn");

                    b.HasIndex("userId");

                    b.ToTable("borrow", (string)null);
                });

            modelBuilder.Entity("DI1P2_2027_BibliothequeAPI.Models.Status", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("maxBooks")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.ToTable("status", (string)null);
                });

            modelBuilder.Entity("DI1P2_2027_BibliothequeAPI.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<long>("statusId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("statusId");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("DI1P2_2027_BibliothequeAPI.Models.Book", b =>
                {
                    b.HasOne("DI1P2_2027_BibliothequeAPI.Models.Author", "authorCast")
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("authorCast");
                });

            modelBuilder.Entity("DI1P2_2027_BibliothequeAPI.Models.Borrow", b =>
                {
                    b.HasOne("DI1P2_2027_BibliothequeAPI.Models.Book", "bookCast")
                        .WithMany()
                        .HasForeignKey("bookIsbn")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DI1P2_2027_BibliothequeAPI.Models.User", "userCast")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("bookCast");

                    b.Navigation("userCast");
                });

            modelBuilder.Entity("DI1P2_2027_BibliothequeAPI.Models.User", b =>
                {
                    b.HasOne("DI1P2_2027_BibliothequeAPI.Models.Status", "statusCast")
                        .WithMany()
                        .HasForeignKey("statusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("statusCast");
                });
#pragma warning restore 612, 618
        }
    }
}
